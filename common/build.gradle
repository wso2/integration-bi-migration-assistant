plugins {
    id 'java-library'
    id 'maven-publish'
    id 'checkstyle'
    id 'com.github.spotbugs' version '5.1.3'
}

group 'com.wso2'
version '0.1.0-SNAPSHOT'


repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url = 'https://maven.wso2.org/nexus/content/repositories/orgballerinalang-1614'
    }
    maven {
        url = 'https://maven.pkg.github.com/ballerina-platform/*'
        credentials {
            username System.getenv("packageUser")
            password System.getenv("packagePAT")
        }
    }
}

dependencies {
    // ballerina-lang
    implementation group: 'org.ballerinalang', name: 'ballerina-parser', version: "${ballerinaLangVersion}"
    implementation group: 'org.ballerinalang', name: 'formatter-core', version: "${ballerinaLangVersion}"
    implementation group: 'org.ballerinalang', name: 'ballerina-tools-api', version: "${ballerinaLangVersion}"

    // fasterxml
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: "${fasterXmlVersion}"
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: "${fasterXmlVersion}"
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: "${fasterXmlVersion}"
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8', version: "${fasterXmlVersion}"

    // Dev dependencies
    implementation group: 'org.jetbrains', name: 'annotations', version: "${jetbrainsAnnotationsVersion}"
    testImplementation group: 'org.testng', name: 'testng', version: "${testngVersion}"
    spotbugs group: 'com.github.spotbugs', name: 'spotbugs', version: "${spotbugsVersion}"
}

java {
    withSourcesJar()
    withJavadocJar()
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java

            groupId = 'com.wso2'
            artifactId = 'integration-bi-migration-assistant-common'
            version = '0.1.0-SNAPSHOT'

            pom {
                name = 'Integration BI Migration Assistant Common'
                description = 'Common utilities and components for the Integration BI Migration Assistant'
                url = 'https://github.com/wso2/integration-bi-migration-assistant'

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'wso2'
                        name = 'WSO2'
                        email = 'info@wso2.com'
                    }
                }
            }
        }
    }
    repositories {
        mavenLocal()
    }
}

checkstyle {
    toolVersion = '10.12.5'
    config = resources.text.fromUri('https://raw.githubusercontent.com/wso2/code-quality-tools/v1.4/checkstyle/jdk-17/checkstyle.xml')
}

checkstyleMain
        .exclude("mule/dataweave/parser/*.java")
        .exclude("**/CombinedSummaryReport.java")
        .exclude("**/AnalysisReport.java")
        .exclude("**/ReportUtils.java")

spotbugs {
    reportLevel = 'high'
    excludeFilter = file("${rootProject.projectDir}/spotbugs-exclude.xml")
}

tasks.withType(com.github.spotbugs.snom.SpotBugsTask).configureEach {
    reports {
        html.required = true
        xml.required = false
    }
}

test {
    useTestNG() {
        suites 'src/test/resources/testng.xml'
    }
}

build {
    dependsOn checkstyleMain
    dependsOn spotbugsMain
}
